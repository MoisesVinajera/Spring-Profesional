{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } // convert non-2xx HTTP responses into errors:\n\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n};\n\nexport const getAllStudents = () => fetch(\"api/v1/students\").then(checkStatus);\nexport const addNewStudent = student => fetch(\"api/v1/students\", {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  method: 'POST',\n  body: JSON.stringify(student)\n}).then(checkStatus);\nexport const deleteStudent = studentId => fetch(`api/v1/students/${studentId}`, {\n  method: 'DELETE'\n}).then(checkStatus);","map":{"version":3,"sources":["E:/IGNITER/Documents/Amigos Code/Spring-Professional/src/frontend/src/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","Promise","reject","getAllStudents","then","addNewStudent","student","headers","method","body","JSON","stringify","deleteStudent","studentId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH,GAH2B,CAI5B;;;AACA,QAAME,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,SAAOK,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CARD;;AAUA,OAAO,MAAMK,cAAc,GAAG,MAC1BT,KAAK,CAAC,iBAAD,CAAL,CACKU,IADL,CACUT,WADV,CADG;AAIP,OAAO,MAAMU,aAAa,GAAGC,OAAO,IAChCZ,KAAK,CAAC,iBAAD,EAAoB;AACjBa,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GADQ;AAIjBC,EAAAA,MAAM,EAAE,MAJS;AAKjBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AALW,CAApB,CAAL,CAOEF,IAPF,CAOOT,WAPP,CADG;AAUP,OAAO,MAAMiB,aAAa,GAAGC,SAAS,IAClCnB,KAAK,CAAE,mBAAkBmB,SAAU,EAA9B,EAAiC;AAClCL,EAAAA,MAAM,EAAE;AAD0B,CAAjC,CAAL,CAEGJ,IAFH,CAEQT,WAFR,CADG","sourcesContent":["import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if (response.ok) {\r\n        return response;\r\n    }\r\n    // convert non-2xx HTTP responses into errors:\r\n    const error = new Error(response.statusText);\r\n    error.response = response;\r\n    return Promise.reject(error);\r\n}\r\n\r\nexport const getAllStudents = () =>\r\n    fetch(\"api/v1/students\")\r\n        .then(checkStatus);\r\n\r\nexport const addNewStudent = student =>\r\n    fetch(\"api/v1/students\", {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(student)\r\n        }\r\n    ).then(checkStatus)\r\n\r\nexport const deleteStudent = studentId =>\r\n    fetch(`api/v1/students/${studentId}`, {\r\n        method: 'DELETE'\r\n    }).then(checkStatus);\r\n\r\n"]},"metadata":{},"sourceType":"module"}
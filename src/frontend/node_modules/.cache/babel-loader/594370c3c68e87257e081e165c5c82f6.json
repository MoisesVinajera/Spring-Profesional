{"ast":null,"code":"import fetch from'unfetch';var checkStatus=function checkStatus(response){if(response.ok){return response;}// convert non-2xx HTTP responses into errors:\nvar error=new Error(response.statusText);error.response=response;return Promise.reject(error);};export var getAllStudents=function getAllStudents(){return fetch(\"api/v1/students\").then(checkStatus);};export var addNewStudent=function addNewStudent(student){return fetch(\"api/v1/students\",{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(student)}).then(checkStatus);};export var deleteStudent=function deleteStudent(studentId){return fetch(\"api/v1/students/\".concat(studentId),{method:'DELETE'}).then(checkStatus);};","map":{"version":3,"sources":["E:/IGNITER/Documents/Amigos Code/Spring-Professional/src/frontend/src/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","Promise","reject","getAllStudents","then","addNewStudent","student","headers","method","body","JSON","stringify","deleteStudent","studentId"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,QAAQ,CAAI,CAC5B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACb,MAAOD,CAAAA,QAAP,CACH,CACD;AACA,GAAME,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAd,CACAF,KAAK,CAACF,QAAN,CAAiBA,QAAjB,CACA,MAAOK,CAAAA,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP,CACH,CARD,CAUA,MAAO,IAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAC1BT,CAAAA,KAAK,CAAC,iBAAD,CAAL,CACKU,IADL,CACUT,WADV,CAD0B,EAAvB,CAIP,MAAO,IAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,OAAO,QAChCZ,CAAAA,KAAK,CAAC,iBAAD,CAAoB,CACjBa,OAAO,CAAE,CACL,eAAgB,kBADX,CADQ,CAIjBC,MAAM,CAAE,MAJS,CAKjBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CALW,CAApB,CAAL,CAOEF,IAPF,CAOOT,WAPP,CADgC,EAA7B,CAUP,MAAO,IAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,SAAS,QAClCnB,CAAAA,KAAK,2BAAoBmB,SAApB,EAAiC,CAClCL,MAAM,CAAE,QAD0B,CAAjC,CAAL,CAEGJ,IAFH,CAEQT,WAFR,CADkC,EAA/B","sourcesContent":["import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if (response.ok) {\r\n        return response;\r\n    }\r\n    // convert non-2xx HTTP responses into errors:\r\n    const error = new Error(response.statusText);\r\n    error.response = response;\r\n    return Promise.reject(error);\r\n}\r\n\r\nexport const getAllStudents = () =>\r\n    fetch(\"api/v1/students\")\r\n        .then(checkStatus);\r\n\r\nexport const addNewStudent = student =>\r\n    fetch(\"api/v1/students\", {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(student)\r\n        }\r\n    ).then(checkStatus)\r\n\r\nexport const deleteStudent = studentId =>\r\n    fetch(`api/v1/students/${studentId}`, {\r\n        method: 'DELETE'\r\n    }).then(checkStatus);\r\n\r\n"]},"metadata":{},"sourceType":"module"}